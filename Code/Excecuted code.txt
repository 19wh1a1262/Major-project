// LCD Pins 8,9,10,11,12,13
//17.52700808337808, 78.3713754683256
// Mems  SCL:19 SDA:18
// Ultrasonic Trig:6, Echo:7
// IOT Serial 2,3
// GPS Serila 4,5
int buzzer = A0;
int f=1;
String numbers[3] = {"","",""};
String message,number;
#include <SoftwareSerial.h>
#include<LiquidCrystal.h>
#include <Wire.h>
#include <Adafruit_Sensor.h>
#include <Adafruit_ADXL345_U.h>
SoftwareSerial gsm(11,12);//rx,tx
Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(12345);
LiquidCrystal lcd(10,9,8,7,6,5);
//GPS Variables...
char str[70];
String gpsString="";
//char *test="$GPGGA";
String gps1="";
String gps2="";
String GPS_RData="";

char *test="$GNGGA";
String latitude="No Range      ";
String longitude="No Range     ";
boolean gps_status=0;
//String gpsString="";
//char *test="$GPGGA";
//char *test="$GNGGA";
//String latitude="No Range      ";
//String longitude="No Range     ";
//boolean gps_status=0;
boolean wflag =0; // flag for fan
boolean flag = 0;
int Steps = 0;
int trigPin = 4;
int echoPin = 3;
int Count,i;
long duration, distance;
int restcount;
float value1 = 49910; 
int seconds;
void setup() 
{  
 /* noInterrupts();                       // disable all interrupts
  TCCR1A = 0;
  TCCR1B = 0;
  TCNT1 = value1;                        // preload timer
  TCCR1B |= (1 << CS10)|(1 << CS12);    // 1024 prescaler 
  TIMSK1 |= (1 << TOIE1);     */          // enable timer overflow interrupt ISR
   Serial.begin(9600);
        
  lcd.setCursor(0, 0);
  gsm.begin(9600);
  pinMode(echoPin, INPUT);
  pinMode(trigPin, OUTPUT);
  pinMode(buzzer, OUTPUT);
  //IOTSerial.begin(9600);
  lcd.begin(16,2);
  lcd.print("  SMART SHOE ");
//  lcd.setCursor(0,1);
//  lcd.print("COUNT MONITPRING");
  delay(2000);
  lcd.clear();
  lcd.setCursor(0,1);
  lcd.print("Mems Init...");
  delay(1000);
  if(!accel.begin())
  {
  lcd.setCursor(0,0);
  lcd.print("Mems Not Found");
  delay(3000);
  }
  else
  {
  lcd.setCursor(0,0);
  lcd.print("Mems OK");
  delay(1000);
  }
  lcd.clear(); 
  digitalWrite(buzzer,HIGH);
  delay(300);
 digitalWrite(buzzer,LOW);
}
void  SendMessage(String num,String message)
{ 

  gsm.println("AT+CMGF=1");   
  delay(1000);  
  gsm.println("AT+CMGS=\"" +num + "\"\r");
  delay(1000);
  gsm.println(message);
  delay(1000);
  gsm.println((char)26);
  delay(1000);
  Serial.println("MESSAGE SENT ");
//  digitalWrite(BUZZER,HIGH);
//  delay(100);
//  digitalWrite(BUZZER,LOW);
 
}
void loop() 
{ 
  Get_GPS_Data();
  sensors_event_t event; 
  accel.getEvent(&event);
  lcd.setCursor(0,1);
  lcd.print("X:");
  lcd.print(event.acceleration.x);
  lcd.setCursor(9,1);
  lcd.print("Y:");
  lcd.print(event.acceleration.y);
  delay(300);
  if(event.acceleration.x>3)
  {
  lcd.setCursor(0,1);
  lcd.print("Moving Started");
  wflag = 1;
  }
  else if(event.acceleration.x<-3)
  {
  lcd.setCursor(0,1);
  wflag = 1;
  }
  else if(event.acceleration.y>3)
  {
  lcd.setCursor(0,1);
  lcd.print("Moving Started");
  wflag = 1;
  }
  else if(event.acceleration.y<-3)
  {
  lcd.setCursor(0,1);
  lcd.print("Moving Started");
  wflag = 1;
  }
  else
  {
  lcd.setCursor(0,0);
  lcd.print("Not Moving");
  }  
  lcd.clear();
  flag = 1;
  if(wflag == 1)
  {
//    accel.stop();
    noInterrupts();
    TCCR1A = 0;
    TCCR1B = 0;
    TCNT1 = value1;                        // preload timer
    TCCR1B |= (1 << CS10)|(1 << CS12);    // 1024 prescaler 
    TIMSK1 |= (1 << TOIE1);  
    interrupts();   
  }
  while(wflag==1)  //wflag for movement detection-> mems.
  { 
    
          digitalWrite(trigPin,HIGH);
          delayMicroseconds(1000);
          digitalWrite(trigPin,LOW);
          duration=pulseIn(echoPin,HIGH);
          distance =(duration/2)/29.1;
          Serial.println(distance);
          lcd.setCursor(0,1);
          lcd.print("Dist:");
          lcd.print(distance);
          lcd.print("  ");
          if(Count==1){
            if(f==1){
              f=0;
       String message = "My locationn is http://maps.google.com/maps?q=17.52700808337808,78.3713754683256";

      SendMessage(numbers[i],message);
            }

          }

            if(Count>10)
            {
              Count = 0 ;
                digitalWrite(buzzer,HIGH);
                delay(100);
               digitalWrite(buzzer,LOW);
             // IOTSerial.print("<h2 style=\"color:blue;text-align:center\">!!REST FOR A WHILE!!</h2>");
              for(int i=0;i<3;i++){
                  SendMessage(numbers[i],"REST FOR WHILE");
              }
            }
            if(seconds==30)
            {
                digitalWrite(buzzer,HIGH);
                delay(500);
               digitalWrite(buzzer,LOW);
             
               for(int i=0;i<3;i++){
                  SendMessage(numbers[i],"TAKE SOME WATER!");
              }
            }
            if(seconds>=59)
            {
               seconds = 0;
              for(int i=0;i<3;i++){
                  SendMessage(numbers[i],"TAKE WARMUP");
              }
            }
          if(flag==1) //Leg movement 
          {
            if(flag==1 && ((distance < 5) && (distance!=0)))
            {
            Count = Count+1;
            lcd.setCursor(0,0);
            lcd.print("Step Count:");
            lcd.print(Count); //Step count printing on LCD.
            flag=0;
            } 
          } 
        if(distance>5 && flag==0)
        {
          flag = 1;
          if(distance > 5)
          {
            seconds = 0;
          
          }
        }
  }  
}

ISR(TIMER1_OVF_vect)                    // interrupt service routine for overflow
{
  TCNT1 = value1;                                // preload timer
 // digitalWrite(ledPin, digitalRead(ledPin) ^ 1);  //Turns LED ON and OFF
 seconds = seconds + 1;
lcd.setCursor(12,1);
lcd.print("T:");
lcd.print(seconds);
lcd.print("   ");
}
void Get_GPS_Data()
{
 
Serial.read();
while (Serial.available()>0)
{
 // "$GNRMC"
if(Serial.find("$GNRMC"))
{
Serial.println("Got GNRMC");  
for(i=0;i<40;i++)
{  
delay(1); 
GPS_RData = (char) Serial.read(); 
}
break;
}
}
Serial.println(GPS_RData[12]);
//gps1="Lat:";
//gps2="Lon:";
//Serial.println(GPS_RData);
if(GPS_RData[12]=='V')
{
gps1="Not Fixed";
gps2="Not Fixed";

}
else
{
gps1 = GPS_RData.substring(14, 23);
gps2 = GPS_RData.substring(27, 37);
Serial.println(gps1);
Serial.println(gps2);
GPS_RData=""; 
}
}
